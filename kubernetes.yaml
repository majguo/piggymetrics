---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zipkin
  labels:
    app: zipkin
spec:
  selector:
    matchLabels:
      app: zipkin
  template:
    metadata:
      labels:
        app: zipkin
    spec:
      containers:
      - name: zipkin
        image: openzipkin/zipkin
        ports:
        - containerPort: 9411
---
apiVersion: v1
kind: Service
metadata:
  name: zipkin-svc
spec:
  type: LoadBalancer
  selector:
    app: zipkin
  ports:
  - protocol: TCP
    port: 9411
    targetPort: 9411
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  labels:
    app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      paths:
        - /logs/messages*.log
      json.message_key: ibm_datetime
      json.keys_under_root: true
      json.add_error_key: true

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  labels:
    app: auth
spec:
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
      - name: auth
        image: auth-service:1.0
        ports:
        - name: http
          containerPort: 9180
        - name: https
          containerPort: 9543
        env:
          - name: MONGO_HOST
            value: mongo-svc
          - name: MONGO_PORT
            value: '27017'
          - name: ZIPKIN_HOST
            value: zipkin-svc
          - name: ZIPKIN_PORT
            value: '9411'
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9180
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9180
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        volumeMounts:
          - name: logs-volume
            mountPath: /logs
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.6.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTIC_CLOUD_ID
          value: Elasticsearch-service-test:ZWFzdHVzMi5henVyZS5lbGFzdGljLWNsb3VkLmNvbTo5MjQzJDlmMzE5NmU2OTY4MzQ0MzNhMzkyOWUzYjE2MzkxY2I4JDlhNDNmZmE4MDQzMjQzMmI4NTlmYWVhNzgwZmQ4Mzc4
        - name: ELASTIC_CLOUD_AUTH
          value: elastic:CBHzsMyrJKcuizu2EW3mbCBX
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: logs-volume
          mountPath: /logs
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-svc
spec:
  type: ClusterIP
  selector:
    app: auth
  ports:
  - name: http
    protocol: TCP
    port: 9180
    targetPort: http
  - name: https
    protocol: TCP
    port: 9543
    targetPort: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statistics
  labels:
    app: statistics
spec:
  selector:
    matchLabels:
      app: statistics
  template:
    metadata:
      labels:
        app: statistics
    spec:
      containers:
      - name: statistics
        image: statistics-service:1.0
        ports:
        - name: http
          containerPort: 9380
        - name: https
          containerPort: 9743
        env:
          - name: MONGO_HOST
            value: mongo-svc
          - name: MONGO_PORT
            value: '27017'
          - name: ZIPKIN_HOST
            value: zipkin-svc
          - name: ZIPKIN_PORT
            value: '9411'
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9380
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9380
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        volumeMounts:
          - name: logs-volume
            mountPath: /logs
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.6.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTIC_CLOUD_ID
          value: Elasticsearch-service-test:ZWFzdHVzMi5henVyZS5lbGFzdGljLWNsb3VkLmNvbTo5MjQzJDlmMzE5NmU2OTY4MzQ0MzNhMzkyOWUzYjE2MzkxY2I4JDlhNDNmZmE4MDQzMjQzMmI4NTlmYWVhNzgwZmQ4Mzc4
        - name: ELASTIC_CLOUD_AUTH
          value: elastic:CBHzsMyrJKcuizu2EW3mbCBX
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: logs-volume
          mountPath: /logs
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: statistics-svc
spec:
  type: ClusterIP
  selector:
    app: statistics
  ports:
  - name: http
    protocol: TCP
    port: 9380
    targetPort: http
  - name: https
    protocol: TCP
    port: 9743
    targetPort: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account
  labels:
    app: account
spec:
  selector:
    matchLabels:
      app: account
  template:
    metadata:
      labels:
        app: account
    spec:
      containers:
      - name: account
        image: account-service:1.0
        ports:
        - name: http
          containerPort: 9280
        - name: https
          containerPort: 9643
        env:
          - name: MONGO_HOST
            value: mongo-svc
          - name: MONGO_PORT
            value: '27017'
          - name: ZIPKIN_HOST
            value: zipkin-svc
          - name: ZIPKIN_PORT
            value: '9411'
          - name: AUTH_HOST
            value: auth-svc
          - name: AUTH_PORT
            value: '9180'
          - name: STATISTICS_HOST
            value: statistics-svc
          - name: STATISTICS_PORT
            value: '9380'
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9280
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9280
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        volumeMounts:
          - name: logs-volume
            mountPath: /logs
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.6.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTIC_CLOUD_ID
          value: Elasticsearch-service-test:ZWFzdHVzMi5henVyZS5lbGFzdGljLWNsb3VkLmNvbTo5MjQzJDlmMzE5NmU2OTY4MzQ0MzNhMzkyOWUzYjE2MzkxY2I4JDlhNDNmZmE4MDQzMjQzMmI4NTlmYWVhNzgwZmQ4Mzc4
        - name: ELASTIC_CLOUD_AUTH
          value: elastic:CBHzsMyrJKcuizu2EW3mbCBX
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: logs-volume
          mountPath: /logs
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: account-svc
spec:
  type: ClusterIP
  selector:
    app: account
  ports:
  - name: http
    protocol: TCP
    port: 9280
    targetPort: http
  - name: https
    protocol: TCP
    port: 9643
    targetPort: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway
        image: gateway:1.0
        ports:
        - name: http
          containerPort: 9080
        - name: https
          containerPort: 9443
        env:
          - name: ZIPKIN_HOST
            value: zipkin-svc
          - name: ZIPKIN_PORT
            value: '9411'
          - name: AUTH_HOST
            value: auth-svc
          - name: AUTH_PORT
            value: '9180'
          - name: ACCOUNT_HOST
            value: account-svc
          - name: ACCOUNT_PORT
            value: '9280'
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9080
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        volumeMounts:
          - name: logs-volume
            mountPath: /logs
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.6.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTIC_CLOUD_ID
          value: Elasticsearch-service-test:ZWFzdHVzMi5henVyZS5lbGFzdGljLWNsb3VkLmNvbTo5MjQzJDlmMzE5NmU2OTY4MzQ0MzNhMzkyOWUzYjE2MzkxY2I4JDlhNDNmZmE4MDQzMjQzMmI4NTlmYWVhNzgwZmQ4Mzc4
        - name: ELASTIC_CLOUD_AUTH
          value: elastic:CBHzsMyrJKcuizu2EW3mbCBX
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: logs-volume
          mountPath: /logs
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  type: LoadBalancer
  selector:
    app: gateway
  ports:
  - name: http
    protocol: TCP
    port: 9080
    targetPort: http
  - name: https
    protocol: TCP
    port: 9443
    targetPort: https
