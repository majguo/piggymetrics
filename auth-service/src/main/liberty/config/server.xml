<?xml version="1.0" encoding="UTF-8"?>
<server description="${project.name}">

    <featureManager>
        <feature>microProfile-3.2</feature>
        <feature>ssl-1.0</feature>
        <feature>jwt-1.0</feature>
    </featureManager>

    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9180"
                  httpsPort="9543"/>

    <webApplication location="${project.name}.war" contextRoot="/" />
    <mpMetrics authentication="false"/>

    <!-- This configuration allows cross-origin HTTP requests, such
         as those from the front-end component (different port). -->
    <cors domain="/auth"
          allowedOrigins="*"
          allowedMethods="GET, DELETE, POST, PUT"
          allowedHeaders="Accept, Content-Type, Authorization"
          maxAge="3600" />

    <!-- This is the keystore that will be used by SSL and by JWT. -->
    <keyStore id="defaultKeyStore" location="keystore.jceks" type="JCEKS" password="secret" />

    <!-- This JWT builder is currently un-used.  It could be used to build
         JWT for a logged-in user.  The resulting JWT would be MP JWT
         compliant if the code using it adds valid group and user names. 
    	 The JWT is signed using the RS256 algorithm, using the default
    	 keystore defined above. -->
    <jwtBuilder id="jwtAuthBuilder" issuer="${jwt.issuer}" expiry="24h"
                keyAlias="default" audiences="piggymetrics" jti="true"/>

    <!-- This JWT builder is used to build the login JWT.  It differs
	     only in expiration time from the JWT builder above.  The
	     code that uses this JWT should only add the 'login' group
	     to the JWT.  There is no way to specify the group here. -->
    <jwtBuilder id="jwtAuthLoginBuilder" issuer="${jwt.issuer}" expiry="1h"
                keyAlias="default" audiences="piggymetrics" jti="true"/>
</server>
